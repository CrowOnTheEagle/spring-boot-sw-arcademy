용어
1. CI/CD
    - 지속적인 통합/배포
2. 터널링
    - 외부에서 공용 IP로 접근 가능하게 하는것
3. 포트 포워딩
    - 특정 포트로 들어오면 연결시켜 주는것
4. Annotation
    - @(어노테이션 이름)


도구
1. 도커
    - 운영체제와 관련없이 배포가 가능하게 하는 프로그램
    - 시스템과 상관없이 배포가 가능하게 하는 프로그램
    - jar -> 이미지화 -> 도커 업로드 -> 다른 디바이스에서 이미지 다운로드
    - https://hub.docker.com/explore 에서 이미지를 찾음
    - 이미지
    * 가상 CD로, CD 안의 프로그램을 설치해야 함
    - 컨테이너
    * 배포된 파일, 직접 실행하는 프로그램
    * jar파일 실행을 위한 가상OS(리눅스)가 있음
    * 해당 OS로의 포트포워딩 필요
    - 도커 명령어 실행을 위해선 도커 프로그램이 켜져 있어야 함
    - 명령어
    * docker run: 이미지 실행
    * docker build -t (계정ID이름)/(이미지이름):(버전) .: 이미지 생성
    * docker images: 이미지 확인
    * docker rmi [-f] (이미지ID): 이미지 삭제(-f시 컨테이너까지 삭제)
    * docker push (이미지이름): 이미지 올리는 명령어
    * docker pull (이미지이름): 이미지 받는 명령어
    * docker run --name (컨테이너이름) -dp (포트번호):(포트번호) (계정명)/(배포 이미지 이름):(버전): 이미지 실행
        # -d: 백그라운드에서 실행
        # -p: 포트번호 설정
    * docker ps: 실행중인 컨테이너 목록 확인
2. git
    - 형상관리 툴
    - 책 4장까지만 참조
3. 젠킨스(jenkins)
    - CI/CD 툴
4. K8S(Kubernetes, 쿠버네티스)
    - 여러 컨테이너들을 쉽게 관리하게 도와주는 툴
    - 복잡하고 큰 환경에 쓰임
5. argoCD
    - git 배포 기반의 gitops 도구
6. Spring/Spring Boot
    - Spring Boot와는 다름
    - Tomcat이 내장되어 있음
    - /src/resources/application.properties에서 톰캣 관련 속성 수정
7. Mobaxterm
    - 리눅스 서버 원격접속 툴
    - https://mobaxterm.mobatek.net/download-home-edition.html
    - 실행 -> 세션 -> ssh -> remote host에 접속하려는 서버 이름 입력 -> 포트번호 입력 -> 이후 yes
8. putty
    - 리눅스 서버 원격 접속 툴
9. WSL
    - 윈도우 내 리눅스 실행프로그램
    - 윈도우 버전 10.0.19042부터 설치가능
    - wsl --set-default-version 2 -> wsl --install
    - wsl.exe -d Ubuntu 로 실행
10. SSH
    - secure shell
    - 윈도우에서 리눅스 원격접속하는 명령어
    - ssh blizkrig553@localhost -p 22
    - 리눅스에서 포트포워딩 필요
    - 비밀번호 입력 스킵방법
        * 파워쉘 -> ssh-keygen -> 엔터 세번 -> C:\Users\Administrator\.ssh에 id_파일 2개가 생성
        * 확장자 없는게 개인키, .pub파일이 공개키
        * type %USERPROFILE%\.ssh\id_ed25519.pub | ssh blizkrig553@localhost "mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys && chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys"


VSCode에서 메이븐 빌드 방법
    - https://maven.apache.org/download.cgi 링크에서 바이너리 zip 파일 다운
    - maven 확장 설정을 아래와 같이 적용
        * user settings의 경로를 (다운받은 메이븐 폴더)/conf/settings.xml 위치로 설정
        * excuteable path를 mvn.cmd 혹은 mvnw(.cmd) 파일 위치로 설정
    - 익스플로러 창에 maven 항목 띄우기
    - 프로젝트 우클릭 -> run maven commands -> install
    - jar 파일 위치: root/target/(프로젝트명).jar


리눅스 기본패캐지 설치
    - sudo apt-get update
    - sudo apt-get upgrade -y


VirtualBox 내 포트포워딩 설정
    - 설정 -> export -> 네트워크 -> 포트포워딩 들어가서 아래 정보 입력
    - ./Memos/포트포워딩.png 파일 참고


가상머신 복제
    - 복제할 가상머신 오른쪽 클릭 -> 복제 -> 완전한 복제 -> 완료
    - 리눅스는 잘못되는경우가 많아 복제를 해둬야함

기존 포트 사용중인 오류가 뜰 때
    - cmd에서 netstat -ano | find "LISTEN" | find "[::]:8081"
    - kill pid 혹은 taskkill /f /pid pid 입력


우분투 내 도커 설치
sudo apt-get update;
sudo apt-get install ca-certificates curl gnupg;
sudo install -m 0755 -d /etc/apt/keyrings;
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg;
sudo chmod a+r /etc/apt/keyrings/docker.gpg;
echo \
  "deb [arch="$(dpkg --print-architecture)" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  "$(. /etc/os-release && echo "$VERSION_CODENAME")" stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update;
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y;
- https://docs.docker.com/engine/install/ubuntu/ 참조


리눅스에서 특정 프로그램 실행권한 부여
    - sudo usermod [플래그] (프로그램 이름) (유저이름)
    - -aG를 주로 씀
        * -a: 기존거에 더해서 부여
        * -G: 그룹 지정

docker-compose.yml 구성내용
version: '3'
services:
  order-service:
    ## image name to load
    image: crowontheeagle/spring01-service:latest
    ## ports to open
    ports:
      - "8081:8081"
    ## determin run docker when linux started
    restart: always
- docker compose pull && docker compose up -d